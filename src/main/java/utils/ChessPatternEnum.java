package utils;

/**
 * 棋形
 */
public enum ChessPatternEnum {

    //五连，11111
    FIVE(0xF8000000, 0xF8000000, 5),
    //活四，011110
    ALIVE_FOUR(0x78000000, 0xFC000000, 6),
    //冲四，01111
    SINGLE_FOUR_1(0x78000000, 0xF8000000, 5),
    //冲四，10111
    SINGLE_FOUR_2(0xB8000000, 0xF8000000, 5),
    //冲四，11011
    SINGLE_FOUR_3(0xD8000000, 0xF8000000, 5),
    //冲四，11101
    SINGLE_FOUR_4(0xE8000000, 0xF8000000, 5),
    //冲四，11110
    SINGLE_FOUR_5(0xF0000000, 0xF8000000, 5),
    //活三，001110
    ALIVE_THREE_1(0x38000000, 0xFC000000, 6),
    //活三，010110
    ALIVE_THREE_2(0x58000000, 0xFC000000, 6),
    //活三，011010
    ALIVE_THREE_3(0x68000000, 0xFC000000, 6),
    //活三，011100
    ALIVE_THREE_4(0x70000000, 0xFC000000, 6),
    //眠三，00111
    SLEEP_THREE_1(0x38000000, 0xF8000000, 5),
    //眠三，01011
    SLEEP_THREE_2(0x58000000, 0xF8000000, 5),
    //眠三，10011
    SLEEP_THREE_3(0x98000000, 0xF8000000, 5),
    //眠三，01101
    SLEEP_THREE_4(0x68000000, 0xF8000000, 5),
    //眠三，10101
    SLEEP_THREE_5(0xA8000000, 0xF8000000, 5),
    //眠三，11001
    SLEEP_THREE_6(0xC8000000, 0xF8000000, 5),
    //眠三，01110
    SLEEP_THREE_7(0x70000000, 0xF8000000, 5),
    //眠三，10110
    SLEEP_THREE_8(0xB0000000, 0xF8000000, 5),
    //眠三，11010
    SLEEP_THREE_9(0xD0000000, 0xF8000000, 5),
    //眠三，11100
    SLEEP_THREE_10(0xE0000000, 0xF8000000, 5),
    //活二，001100
    ALIVE_TWO_1(0x30000000, 0xFC000000, 6),
    //活二，011000
    ALIVE_TWO_2(0x60000000, 0xFC000000, 6),
    //活二，000110
    ALIVE_TWO_3(0x18000000, 0xFC000000, 6),
    //活二，010100
    ALIVE_TWO_4(0x50000000, 0xFC000000, 6),
    //活二，001010
    ALIVE_TWO_5(0x28000000, 0xFC000000, 6),
    //活二，010010
    ALIVE_TWO_6(0x48000000, 0xFC000000, 6),
    //眠二，11000
    SLEEP_TWO_1(0xC0000000, 0xF8000000, 5),
    //眠二，10100
    SLEEP_TWO_2(0xA0000000, 0xF8000000, 5),
    //眠二，10010
    SLEEP_TWO_3(0x90000000, 0xF8000000, 5),
    //眠二，10001
    SLEEP_TWO_4(0x88000000, 0xF8000000, 5),
    //眠二，01100
    SLEEP_TWO_5(0x60000000, 0xF8000000, 5),
    //眠二，01010
    SLEEP_TWO_6(0x50000000, 0xF8000000, 5),
    //眠二，01001
    SLEEP_TWO_7(0x48000000, 0xF8000000, 5),
    //眠二，00110
    SLEEP_TWO_8(0x38000000, 0xF8000000, 5),
    //眠二，00101
    SLEEP_TWO_9(0x28000000, 0xF8000000, 5),
    //眠二，00011
    SLEEP_TWO_10(0x18000000, 0xF8000000, 5),
    //活一，010000
    ALIVE_ONE_1(0x40000000, 0xFC000000, 6),
    //活一，001000
    ALIVE_ONE_2(0x20000000, 0xFC000000, 6),
    //活一，000100
    ALIVE_ONE_3(0x10000000, 0xFC000000, 6),
    //活一，000010
    ALIVE_ONE_4(0x08000000, 0xFC000000, 6),
    //眠一，10000
    SLEEP_ONE_1(0x80000000, 0xF8000000, 5),
    //眠一，01000
    SLEEP_ONE_2(0x40000000, 0xF8000000, 5),
    //眠一，00100
    SLEEP_ONE_3(0x20000000, 0xF8000000, 5),
    //眠一，00010
    SLEEP_ONE_4(0x10000000, 0xF8000000, 5),
    //眠一，00001
    SLEEP_ONE_5(0x08000000, 0xF8000000, 5),
    ;

    //棋形
    public int pattern;
    //反向掩码
    public int limitMask;
    //棋形长度
    public int bitLength;

    ChessPatternEnum(int pattern, int limitMask, int bitLength) {
        this.pattern = pattern;
        this.limitMask = limitMask;
        this.bitLength = bitLength;
    }
}
